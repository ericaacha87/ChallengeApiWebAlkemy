// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MundoDisneyChallenge.DAL;

namespace MundoDisneyChallenge.Migrations
{
    [DbContext(typeof(MundoDisneyDbContext))]
    [Migration("20210619003311_tableUsuario")]
    partial class tableUsuario
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MundoDisneyChallenge.Models.Genero", b =>
                {
                    b.Property<int>("GeneroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneroID");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("MundoDisneyChallenge.Models.PeliculaSerie", b =>
                {
                    b.Property<int>("PeliculaSerieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneroID")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeliculaSerieID");

                    b.HasIndex("GeneroID");

                    b.ToTable("PeliculaSeries");
                });

            modelBuilder.Entity("MundoDisneyChallenge.Models.Personaje", b =>
                {
                    b.Property<int>("PersonajeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Historia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.HasKey("PersonajeID");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("MundoDisneyChallenge.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PeliculaSeriePersonaje", b =>
                {
                    b.Property<int>("PeliculaSerieID")
                        .HasColumnType("int");

                    b.Property<int>("PersonajesPersonajeID")
                        .HasColumnType("int");

                    b.HasKey("PeliculaSerieID", "PersonajesPersonajeID");

                    b.HasIndex("PersonajesPersonajeID");

                    b.ToTable("PeliculaSeriePersonaje");
                });

            modelBuilder.Entity("MundoDisneyChallenge.Models.PeliculaSerie", b =>
                {
                    b.HasOne("MundoDisneyChallenge.Models.Genero", "Genero")
                        .WithMany("PeliculaSeries")
                        .HasForeignKey("GeneroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("PeliculaSeriePersonaje", b =>
                {
                    b.HasOne("MundoDisneyChallenge.Models.PeliculaSerie", null)
                        .WithMany()
                        .HasForeignKey("PeliculaSerieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MundoDisneyChallenge.Models.Personaje", null)
                        .WithMany()
                        .HasForeignKey("PersonajesPersonajeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MundoDisneyChallenge.Models.Genero", b =>
                {
                    b.Navigation("PeliculaSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
